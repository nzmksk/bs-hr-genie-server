version: "3.8"
services:
  express:
    build: .
    image: hr-genie:latest
    container_name: hr-server
    depends_on:
      - postgres
      - redis
    environment:
      # PostgreSQL configuration
      - POSTGRES_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}

      # Redis configuration
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}

      # JWT secret
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
    ports:
      - "2000:3000"
    volumes:
      - ./server/:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/coverage
    networks:
      - hr-network
  postgres:
    container_name: hr-db
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - "35432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./db_init/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hr-network
  redis:
    container_name: hr-cache
    image: redis
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - hr-network
networks:
  hr-network:
    driver: bridge
volumes:
  redis-data:
